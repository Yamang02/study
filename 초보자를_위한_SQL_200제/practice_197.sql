-- ■ 예제_197. SQL로 머신러닝 구현하기19(APRIORI)

-- 1. 머신러닝 모델이 학습할 테이블을 생성합니다.

DROP TABLE MARKET_TABLE; 

CREATE TABLE MARKET_TABLE
  ( CUST_ID         NUMBER(10),
    STOCK_CODE    NUMBER(10),
    STOCK_NAME   VARCHAR2(30),
    QUANTITY      NUMBER(10),
    STOCK_PRICE   NUMBER(10,2),
    BUY_DATE      DATE  );
        
-- sqldeveloper 를 이용하여 market.csv 데이터를 로드합니다. 

select count(*) from market_table;

-- 17

select * from market_table;

-- 2. 연관성 분석을 위한 환경 구성 테이블을 생성합니다.

DROP TABLE SETTINGS_ASSOCIATION_RULES;

CREATE TABLE SETTINGS_ASSOCIATION_RULES
AS
   SELECT *
     FROM TABLE (DBMS_DATA_MINING.GET_DEFAULT_SETTINGS)
     WHERE SETTING_NAME LIKE 'ASSO_%';

BEGIN
   UPDATE SETTINGS_ASSOCIATION_RULES
      SET SETTING_VALUE = 3
      WHERE SETTING_NAME = DBMS_DATA_MINING.ASSO_MAX_RULE_LENGTH;

   UPDATE SETTINGS_ASSOCIATION_RULES
      SET SETTING_VALUE = 0.03
      WHERE SETTING_NAME = DBMS_DATA_MINING.ASSO_MIN_SUPPORT;

    UPDATE SETTINGS_ASSOCIATION_RULES
      SET SETTING_VALUE = 0.03
      WHERE SETTING_NAME = DBMS_DATA_MINING.ASSO_MIN_CONFIDENCE;

   INSERT INTO SETTINGS_ASSOCIATION_RULES
        VALUES (DBMS_DATA_MINING.ODMS_ITEM_ID_COLUMN_NAME, 'STOCK_CODE');

   COMMIT;
END;
/


-- 3. 연관성 분석을 위한 머신러닝 모델을 생성합니다.

BEGIN
  DBMS_DATA_MINING.DROP_MODEL('MD_ASSOC_ANLYSIS');
END;
/

CREATE OR REPLACE VIEW VW_MARKET_TABLE 
AS 
SELECT CUST_ID, STOCK_CODE 
  FROM MARKET_TABLE;


BEGIN 
   DBMS_DATA_MINING.CREATE_MODEL(
      MODEL_NAME            => 'MD_ASSOC_ANLYSIS',
      MINING_FUNCTION       => DBMS_DATA_MINING.ASSOCIATION,
      DATA_TABLE_NAME       => 'VW_MARKET_TABLE',
      CASE_ID_COLUMN_NAME   => 'CUST_ID',
      TARGET_COLUMN_NAME    => NULL,
      SETTINGS_TABLE_NAME   => 'SETTINGS_ASSOCIATION_RULES');
END;
/


-- 4. 머신러닝 모델을 확인합니다. 


SELECT MODEL_NAME,
          ALGORITHM,
          MINING_FUNCTION
  FROM ALL_MINING_MODELS
  WHERE MODEL_NAME = 'MD_ASSOC_ANLYSIS';


-- 5. 머신러닝 모델 구성 정보를 확인합니다.

SELECT SETTING_NAME, SETTING_VALUE
  FROM ALL_MINING_MODEL_SETTINGS
  WHERE MODEL_NAME = 'MD_ASSOC_ANLYSIS';

-- 6. 모델이 분석한 연관분석 결과를 확인합니다. 

SELECT A.ATTRIBUTE_SUBNAME as ANTECEDENT,
          C.ATTRIBUTE_SUBNAME as CONSEQUENT,
          ROUND(RULE_SUPPORT,3) as SUPPORT,
          ROUND(RULE_CONFIDENCE,3) as CONFIDENCE,
          ROUND(RULE_LIFT,3) as LIFT
  FROM  TABLE(DBMS_DATA_MINING.GET_ASSOCIATION_RULES('MD_ASSOC_ANLYSIS',10)) T,
            TABLE(T.CONSEQUENT) C,
            TABLE(T.ANTECEDENT) A
  ORDER BY SUPPORT DESC,LIFT  DESC;














